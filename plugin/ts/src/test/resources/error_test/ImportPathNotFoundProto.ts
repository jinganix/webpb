// Code generated by Webpb compiler, do not edit.
// https://github.com/jinganix/webpb
// ImportPathNotFound.proto

import * as Webpb from "webpb";
import * as BadImport from "./BadImport";

export interface IImportPathNotFound extends BadImport.IExtends {
  foo_2: number;
  bar_2: string;
}

export class ImportPathNotFound extends BadImport.Extends implements IImportPathNotFound, Webpb.WebpbMessage {
  foo_2!: number;
  bar_2!: string;
  webpbMeta: () => Webpb.WebpbMeta;

  static CLASS = "ImportPathNotFound";
  static CONTEXT = "";
  static METHOD = "";
  static PATH = "";

  protected constructor(p?: IImportPathNotFound) {
    super();
    Webpb.assign(p, this, []);
    this.webpbMeta = () =>
      ({
        class: "ImportPathNotFound",
        context: "",
        method: "",
        path: "",
      } as Webpb.WebpbMeta);
  }

  static create(p?: IImportPathNotFound): ImportPathNotFound {
    return new ImportPathNotFound(p);
  }

  static fromAlias(data?: unknown): ImportPathNotFound {
    return ImportPathNotFound.create(data as IImportPathNotFound);
  }

  toWebpbAlias(): unknown {
    return this;
  }
}
