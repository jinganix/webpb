// Code generated by Webpb compiler, do not edit.
// https://github.com/jinganix/webpb
// Test9.proto

import * as Webpb from "webpb";

export interface ITest9 {
  test1: string;
}

export class Test9 implements ITest9, Webpb.WebpbMessage {
  test1!: string;
  webpbMeta: () => Webpb.WebpbMeta;

  static CLASS = "Test9";
  static CONTEXT = "";
  static METHOD = "";
  static PATH = "";

  protected constructor(p?: ITest9) {
    Webpb.assign(p, this, []);
    this.webpbMeta = () =>
      ({
        class: "Test9",
        context: "",
        method: "",
        path: "",
      } as Webpb.WebpbMeta);
  }

  static create(p?: ITest9): Test9 {
    return new Test9(p);
  }

  static fromAlias(data?: unknown): Test9 {
    return Test9.create(data as ITest9);
  }

  toWebpbAlias(): unknown {
    return this;
  }
}
