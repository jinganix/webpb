// Code generated by Webpb compiler, do not edit.
// https://github.com/jinganix/webpb
// AliasSkip.proto

import * as Webpb from "webpb";

export interface IAliasSkip {
  a: number;
  b: number;
}

export class AliasSkip implements IAliasSkip, Webpb.WebpbMessage {
  a!: number;
  b!: number;
  webpbMeta: () => Webpb.WebpbMeta;

  static CLASS = "AliasSkip";
  static CONTEXT = "";
  static METHOD = "";
  static PATH = "";

  protected constructor(p?: IAliasSkip) {
    Webpb.assign(p, this, []);
    this.webpbMeta = () =>
      ({
        class: "AliasSkip",
        context: "",
        method: "",
        path: "",
      } as Webpb.WebpbMeta);
  }

  static create(p?: IAliasSkip): AliasSkip {
    return new AliasSkip(p);
  }

  static fromAlias(data?: unknown): AliasSkip {
    return AliasSkip.create(data as IAliasSkip);
  }

  toWebpbAlias(): unknown {
    return this;
  }
}
