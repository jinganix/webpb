// Code generated by Webpb compiler, do not edit.
// https://github.com/jinganix/webpb
// ImportTest.proto

import * as Webpb from "webpb";
import * as NoPackageProto from "./NoPackageProto";

export interface IImportTest extends NoPackageProto.INoPackage {
  foo_2: number;
  bar_2: string;
  no_package: NoPackageProto.INoPackage;
}

export class ImportTest extends NoPackageProto.NoPackage implements IImportTest, Webpb.WebpbMessage {
  foo_2!: number;
  bar_2!: string;
  no_package!: NoPackageProto.INoPackage;
  webpbMeta: () => Webpb.WebpbMeta;

  protected constructor(p?: IImportTest) {
    super();
    Webpb.assign(p, this, []);
    p?.no_package !== undefined && (this.no_package = NoPackageProto.NoPackage.create(p.no_package));
    this.webpbMeta = () => (p && {
      class: "ImportTest",
      context: "",
      method: "",
      path: "",
    }) as Webpb.WebpbMeta;
  }

  static create(p: IImportTest): ImportTest {
    return new ImportTest(p);
  }

  static fromAlias(data: Record<string, unknown>): ImportTest {
    return ImportTest.create(data as any);
  }

  toWebpbAlias(): unknown {
    return this;
  }
}
