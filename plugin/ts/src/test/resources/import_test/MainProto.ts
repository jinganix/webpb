// Code generated by Webpb compiler, do not edit.
// https://github.com/jinganix/webpb
// Main.proto

import * as Webpb from "webpb";

export interface IMain extends INoPackage {
  foo_2: number;
  bar_2: string;
}

export class Main extends NoPackage implements IMain, Webpb.WebpbMessage {
  foo_2!: number;
  bar_2!: string;
  webpbMeta: () => Webpb.WebpbMeta;

  protected constructor(p?: IMain) {
    super();
    Webpb.assign(p, this, []);
    this.webpbMeta = () =>
      (p && {
        class: "Main",
        context: "",
        method: "",
        path: "",
      }) as Webpb.WebpbMeta;
  }

  static create(p: IMain): Main {
    return new Main(p);
  }

  static fromAlias(data: Record<string, unknown>): Main {
    return Main.create(data as any);
  }

  toWebpbAlias(): unknown {
    return this;
  }
}
