// Code generated by Webpb compiler, do not edit.
// https://github.com/jinganix/webpb
// Extend.proto

import * as Webpb from "webpb";
import * as ExtendsProto from "./ExtendsProto";

export interface ILevel3 {
  foo_1: number;
}

export class Level3 implements ILevel3, Webpb.WebpbMessage {
  foo_1!: number;
  webpbMeta: () => Webpb.WebpbMeta;

  static CLASS = "Level3";
  static CONTEXT = "";
  static METHOD = "";
  static PATH = "";

  protected constructor(p?: ILevel3) {
    Webpb.assign(p, this, []);
    this.webpbMeta = () =>
      ({
        class: "Level3",
        context: "",
        method: "",
        path: "",
      } as Webpb.WebpbMeta);
  }

  static create(p?: ILevel3): Level3 {
    return new Level3(p);
  }

  static fromAlias(data?: unknown): Level3 {
    const p = Webpb.toAlias(data, {
      "a": "foo_1",
    }) as Record<string, unknown>;
    return Object.assign(new Level3(), p);
  }

  toWebpbAlias(): unknown {
    return Webpb.toAlias(this, {
      "foo_1": "a",
    });
  }
}

export interface ILevel2 extends ExtendsProto.ILevel3 {
  foo_2: number;
}

export class Level2 extends ExtendsProto.Level3 implements ILevel2, Webpb.WebpbMessage {
  foo_2!: number;
  webpbMeta: () => Webpb.WebpbMeta;

  static CLASS = "Level2";
  static CONTEXT = "";
  static METHOD = "";
  static PATH = "";

  protected constructor(p?: ILevel2) {
    super();
    Webpb.assign(p, this, []);
    this.webpbMeta = () =>
      ({
        class: "Level2",
        context: "",
        method: "",
        path: "",
      } as Webpb.WebpbMeta);
  }

  static create(p?: ILevel2): Level2 {
    return new Level2(p);
  }

  static fromAlias(data?: unknown): Level2 {
    const p = Webpb.toAlias(data, {
      "a": "foo_1",
      "b": "foo_2",
    }) as Record<string, unknown>;
    return Object.assign(new Level2(), p);
  }

  toWebpbAlias(): unknown {
    return Webpb.toAlias(this, {
      "foo_1": "a",
      "foo_2": "b",
    });
  }
}

export interface ILevel1 extends ExtendsProto.ILevel2 {
  foo_3: number;
  foo_4: number;
}

export class Level1 extends ExtendsProto.Level2 implements ILevel1, Webpb.WebpbMessage {
  foo_3!: number;
  foo_4!: number;
  webpbMeta: () => Webpb.WebpbMeta;

  static CLASS = "Level1";
  static CONTEXT = "";
  static METHOD = "";
  static PATH = "";

  protected constructor(p?: ILevel1) {
    super();
    Webpb.assign(p, this, []);
    this.webpbMeta = () =>
      ({
        class: "Level1",
        context: "",
        method: "",
        path: "",
      } as Webpb.WebpbMeta);
  }

  static create(p?: ILevel1): Level1 {
    return new Level1(p);
  }

  static fromAlias(data?: unknown): Level1 {
    const p = Webpb.toAlias(data, {
      "b": "foo_1",
      "a": "foo_2",
      "c": "foo_3",
      "d": "foo_4",
    }) as Record<string, unknown>;
    return Object.assign(new Level1(), p);
  }

  toWebpbAlias(): unknown {
    return Webpb.toAlias(this, {
      "foo_1": "b",
      "foo_2": "a",
      "foo_3": "c",
      "foo_4": "d",
    });
  }
}
