name: PUBLISH

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Enter publish version, eg: 0.0.1'
        required: false

jobs:
  prepare:
    name: Prepare publish version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master

      - name: Validate version
        id: validate-version
        run: |
          current_version=$(grep -m1 'version =' gradle.properties | grep -oE '([0-9]+\.[0-9]+\.[0-9]+)')
          input_version=${{ github.event.inputs.version }}
          echo "Current version: ${current_version}, Input version: ${input_version}"
          if [[ -n "${input_version}" ]]; then
            if ! [[ "${input_version}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "ERROR: Invalid version number ${input_version}. Please use format x.y.z"
              exit 1
            fi
            p1=(${input_version//./ })
            p2=(${current_version//./ })
            if [ ${p1[0]} -lt ${p2[0]} ] \
              || [[ ${p1[0]} -eq ${p2[0]} && ${p1[1]} -lt ${p2[1]} ]] \
              || [[ ${p1[0]} -eq ${p2[0]} && ${p1[1]} -eq ${p2[1]} && ${p1[2]} -lt ${p2[2]} ]]; then
              echo "ERROR: Input version is less than current version"
              exit 1
            fi
            publish_version=${input_version}
          else
            publish_version=${current_version}
          fi
          echo "publish_version=${publish_version}" >> "${GITHUB_ENV}"
          echo "Publish version: ${publish_version}"

      - name: Check tag existence
        run: |
          if ! [ $(git tag -l v"${{ env.publish_version }}") ]; then
            echo "ERROR: Tag v${{ env.publish_version }} does not exist"
            exit 1
          fi

      - name: Write version to file
        run: |
          echo "${publish_version}" >> /tmp/publish_version

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${GITHUB_SHA}
          path: /tmp/publish_version
          retention-days: 30

  publish:
    name: Publish
    needs: [prepare]
    runs-on: ubuntu-latest
    steps:
      - name: Download publish_version
        uses: actions/download-artifact@v4
        with:
          name: ${GITHUB_SHA}
          path: /tmp

      - name: Read publish version
        run: |
          publish_version=$(cat /tmp/publish_version)
          echo "publish_version=${publish_version}" >> "${GITHUB_ENV}"
          echo "Publish version: ${publish_version}"

      - name: Checkout publish tag
        uses: actions/checkout@v4
        with:
          ref: refs/tags/v${{ env.publish_version }}

      - name: Setup JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 8

      - name: Build
        run: ./gradlew build

      - name: Publish
        run: ./gradlew publish
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
          GPG_SIGNING_PASSWORD: ${{ secrets.GPG_SIGNING_PASSWORD }}
          NEXUS_REPO_PASSWORD: ${{ secrets.NEXUS_REPO_PASSWORD }}
          NEXUS_REPO_USERNAME: ${{ secrets.NEXUS_REPO_USERNAME }}
