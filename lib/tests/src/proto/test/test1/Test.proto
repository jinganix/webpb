syntax = "proto2";

package TestProto;

option java_package = "test";

import "Include.proto";
import "Include2.proto";

import "imports/WebpbOptions.proto";
import "webpb/WebpbExtend.proto";

import "google/protobuf/any.proto";

option (f_opts).java = {
  gen_getter: true
  gen_setter: false
  import: 'com.fasterxml.jackson.annotation.JsonInclude'
  import: 'com.fasterxml.jackson.annotation.JsonInclude.Include'
  import: 'io.github.jinganix.webpb.tests.Const'
};

option (f_opts).ts = {
  int64_as_string: true
};

message Test1 {
  option (m_opts).opt = {
    method: "GET"
    context: "test"
    path: "/test?a=123&b={test1}&c=321&d={test2}&e=456"
    implements: "InterfaceA"
    implements: "InterfaceB"
  };

  required int64 test1 = 1;
  required int32 test2 = 2;
}

message Test2 {
  option (m_opts).opt = {
    extends: "AbstractClass"
    method: "GET"
    context: "test"
    path: "/test/{test2}?id={test1}&data1={test3.test1}&data2={test3.test2}"
  };

  required int64 test1 = 1;
  required string test2 = 2;
  required Test6 test3 = 3;
  map<int32, Test1> test4 = 4;
}

enum Test3 {
  option (e_opts).opt = {string_value: true};

  test3_1 = 0;
  test3_2 = 1;
  test3_3 = 2;
}

message Test4 {
  option (m_opts).java = {
    annotation: '@JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)'
  };

  required int64 test1 = 1 [(opts).ts = {alias: 'aliasTest1'}];
  required int32 test2 = 2 [(opts).ts = {alias: 'aliasTest2'}];
  required string test3 = 3;
  repeated int64 test4 = 4 [(opts).ts = {as_string: true}];
}

enum Test5 {
  option (e_opts).java = {
    implements: "InterfaceA"
    implements: "InterfaceB"
  };

  test5_1 = 0 [(v_opts).opt = {value: 'text1'}];
  test5_2 = 1 [(v_opts).opt = {value: 'text2'}];
  test5_3 = 2;
}

message Test6 {
  option (m_opts).java = {
    annotation: '@JsonInclude(value = com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)'
  };

  required string test1 = 1;
  optional int32 test2 = 2;
}

message Test {
  option (m_opts).opt = {
    method: "GET"
    context: "test"
    path: "/test/{test1}"
  };
  option (m_opts).java = {
    annotation: '@ToString'
    annotation: '@JsonInclude(Include.NON_NULL)'
  };

  required int32 test1 = 1 [(opts).opt = {in_query: true}, (opts).ts = {as_string: true}];
  required IncludeProto.Message test2 = 2 [(opts).java = {annotation: '@NotNull'}];
  required IncludeProto.Enum test3 = 3;
  optional Test4 test4 = 4;
  map<int64, int32> test5 = 5;
  map<int32, IncludeProto.Message> test6 = 6;
  required google.protobuf.Any test7 = 7;

  message NestedTest {
    option (m_opts).opt = {
      method: "GET"
      context: "test"
      path: "/test/nested/{test1}"
    };

    required int32 test1 = 1;
  }

  required NestedTest test8 = 8;
  optional int32 test9 = 9 [(opts).opt = {omitted: true}];
  required int64 test10 = 10 [(opts).ts = {as_string: true}, (opts).java = {annotation: '@JsonSerialize(using = ToStringSerializer.class)'}];
  repeated IncludeProto.Message test11 = 11;
  required IncludeProto.Message.Nested test12 = 12;
  repeated Include2Proto.Message test13 = 13;
  required Include2Proto.Message.Nested test14 = 14;
  required string test15 = 15 [(opts).java = {annotation: '@Pattern(regexp = Const.REGEX)'}];
  required bytes test16 = 16;

  required group Test17 = 17 {
    required string test = 1;
  }

  required int32 test18 = 18 [default = 123];
  required string test19 = 19 [default = 'test19'];
}
